import numpy as np


headers = 'A  C  D  E  F  G  H  I  K  L  M  N  P  Q  R  S  T  V  W  Y'.split()

keys = '''
A  2 -2  0  0 -3  1 -1 -1 -1 -2 -1  0  1  0 -2  1  1  0 -6 -3
C -2 12 -5 -5 -4 -3 -3 -2 -5 -6 -5 -4 -3 -5 -4  0 -2 -2 -8  0
D  0 -5  4  3 -6  1  1 -2  0 -4 -3  2 -1  2 -1  0  0 -2 -7 -4
E  0 -5  3  4 -5  0  1 -2  0 -3 -2  1 -1  2 -1  0  0 -2 -7 -4
F -3 -4 -6 -5  9 -5 -2  1 -5  2  0 -3 -5 -5 -4 -3 -3 -1  0  7
G  1 -3  1  0 -5  5 -2 -3 -2 -4 -3  0  0 -1 -3  1  0 -1 -7 -5
H -1 -3  1  1 -2 -2  6 -2  0 -2 -2  2  0  3  2 -1 -1 -2 -3  0
I -1 -2 -2 -2  1 -3 -2  5 -2  2  2 -2 -2 -2 -2 -1  0  4 -5 -1
K -1 -5  0  0 -5 -2  0 -2  5 -3  0  1 -1  1  3  0  0 -2 -3 -4
L -2 -6 -4 -3  2 -4 -2  2 -3  6  4 -3 -3 -2 -3 -3 -2  2 -2 -1
M -1 -5 -3 -2  0 -3 -2  2  0  4  6 -2 -2 -1  0 -2 -1  2 -4 -2
N  0 -4  2  1 -3  0  2 -2  1 -3 -2  2  0  1  0  1  0 -2 -4 -2
P  1 -3 -1 -1 -5  0  0 -2 -1 -3 -2  0  6  0  0  1  0 -1 -6 -5
Q  0 -5  2  2 -5 -1  3 -2  1 -2 -1  1  0  4  1 -1 -1 -2 -5 -4
R -2 -4 -1 -1 -4 -3  2 -2  3 -3  0  0  0  1  6  0 -1 -2  2 -4
S  1  0  0  0 -3  1 -1 -1  0 -3 -2  1  1 -1  0  2  1 -1 -2 -3
T  1 -2  0  0 -3  0 -1  0  0 -2 -1  0  0 -1 -1  1  3  0 -5 -3
V  0 -2 -2 -2 -1 -1 -2  4 -2  2  2 -2 -1 -2 -2 -1  0  4 -6 -2
W -6 -8 -7 -7  0 -7 -3 -5 -3 -2 -4 -4 -6 -5  2 -2 -5 -6 17  0
Y -3  0 -4 -4  7 -5  0 -1 -4 -1 -2 -2 -5 -4 -4 -3 -3 -2  0 10
'''.strip()

out = dict()

for key in keys.splitlines():
    line = key.split()
    k = line[0]
    vs = line[1:]
    for h, v in zip(headers, vs):
        out[(h, k)] = int(v)

PAM250 = out


def local_alignment(s1, s2, matrix, indel_penalty):
    m, n = len(s1), len(s2)
    score = np.zeros((m + 1, n + 1), dtype=int)
    backtrack = np.zeros((m + 1, n + 1), dtype=int)
    
    max_score = 0
    max_position = (0, 0)
    
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            match = score[i-1][j-1] + matrix[(s1[i-1], s2[j-1])]
            delete = score[i-1][j] - indel_penalty
            insert = score[i][j-1] - indel_penalty
            score[i][j] = max(0, match, delete, insert)
            
            if score[i][j] == match:
                backtrack[i][j] = 1
            elif score[i][j] == delete:
                backtrack[i][j] = 2
            elif score[i][j] == insert:
                backtrack[i][j] = 3
                
            if score[i][j] > max_score:
                max_score = score[i][j]
                max_position = (i, j)

    i, j = max_position
    aligned_s1 = []
    aligned_s2 = []
    
    while i * j != 0 and score[i][j] != 0:
        if backtrack[i][j] == 1:
            aligned_s1.append(s1[i-1])
            aligned_s2.append(s2[j-1])
            i -= 1
            j -= 1
        elif backtrack[i][j] == 2:
            aligned_s1.append(s1[i-1])
            aligned_s2.append('-')
            i -= 1
        elif backtrack[i][j] == 3:
            aligned_s1.append('-')
            aligned_s2.append(s2[j-1])
            j -= 1
            
    return max_score, ''.join(aligned_s1[::-1]), ''.join(aligned_s2[::-1])

s1 = 'QLSRRCLHFASKGYCHWRSPFIKDYGAHCEFCAAITLNMHIAEHFNMVAQTIGYIRSQWGHVEPAALFDMTYMPRGAHMPEHPFFVLCYWNAIDWKPGSCCALMMHGQIYMCDFTYEQHKLLPDCTSYEDFWEERHFSDFYGLGHFIMTFKADHTVNLNSQCYQADWVDRRHYVIATIARDEVFDMSTFTKTMCKRVMKQMAEPWVDDDKNPSCQRGHCKFMWDPIVITKAEVAVNHAFFKWFKGWNLVIEMYRLCVSAWCCYDPTKSTYMVDCETCIGCKWRLWFYNMEHPLKKSWVNLDDFMHCAYFRGTTAVIHDTQASNEEDLIKPNWCENSDNNRFFLQTPTLIHDLATYYCMEWPPEMIYSDNINVWGVMQCFVNTFSKMCQISLGCVESNYYQIWDSCFDWSPCRDWNCYVPQTGWYDPCCKKEWVVSTPECCAKNCICTQRWRRIAVSYRTSDAEECHSLHYFYWIRLLWRRTCDKSNDRVQSDICCSYGPEIGLYCARSRPELEPHQAWMWSRCHFFKRFFNANISPLHVIANNRLPQGWQHGDGYHYFRMAWIIDTHEACHEKLFHRRLWDAQLMYTGSGQQKEYWQEPFWHIIEIMDVSFVFMKMLIGGWVHDNRTSYEIFCYHCYQMPTEPGFGPFYSHAVILGYNSPRLGPMHKDMWFRNSVHPWSGTEWLSWNHNISLIRSQYTNYSKGGPFCEQIINDDSQWNSGQRNQMSGCNAWLEVIWVWADSWICMTINLTHGKHQEKQANEFETYADVKNMVWGIYMAVWQEIPDEIPNCLSPTAFCYFYCNGDDGEQQYTWHLWRKCSFVSQLTFIIHTNPCIQFWEISETWIIQFREVCQWLDSNRDILMLATPNPFSQSNVWHQIKANEVEDRIKGQTQTMPGGFQFHPREQPPCPGFCFTEAEEHHQGSACVIVLEGVSNPHQSSSKMGINWEWWINKWIWRFGCKKDLHICITCMYHTNEDTNKQAHDALHLGQVCRVNMPLDYFQSMDPPDKWYMDADTCASDRRYQAWNVEIPPHNMDNELNARGFFFFKGHWAHDHVWGFGMCMWTYMKKTVEVSQDCVKWGAEGFLLSYVHRQMRQVMRVCPNWGSTHMATIHECQTSVHEGWIECYMGPTNWYNKDPQMGREEMWGFWWGLTDRPIIQWMWSQMNQNVSICQPLMRHGIQIYAWMQGDAWCIRCDNGWCQNGAGWFVLQRPTCYYMVRDFAAGDFNTFPAGRSFHQCVQWMVQRFILAATQVGKILDIISHRFLFAIGDKFFWAHANVVRITRIPTSCPWRCIGVLGISTCSEWILMWSRGSNFFHAPEGLKGMMGRPPNNMSTTHGYMAHPSLCMCMTHAGHRPYENVRWREIHPTIYDGHNKCVWVVGTFAAVCEINTAMFRSVMVIDKFMSGMRICIITCDATYARMIEIKMEVYAMKDRPDRGEGMLWNLDRNVYEGVCKRLIQECHSARFMVRFEGVCLSFVNLCEQPPGIWCCIVYWLMWKRSDHSVCGCYKEKSMSYAFRNGVAFTNCWAGTPGYNSVNNGWQYSVLHSWHHMISKNEDFSEYDSDYASSTRWPIGEWGPNIVDSGCQYSYALPIVIYWFEQCSCDVPIGLCLPDRWYGEVLDFQLLRNITEGHCEAHFPKSCWHGFRRLPDRWMYPVDSYVQGTNITYYIEWGVRYNQFLRQARDYPKDEEWHMQYVHPTNHHTELYCGCFIWDFIVEVYKSHEPSKFGTYCHPEHHCAGYVSIWMDMGQMGKKDMHIMKTDSKVTEDRIQKTRNSYPYCFHKYRVRLHNSWWNQEWEPLVNCHVCQSFPLYAPDKPPLSTPGPYNNKIYPYFGIPYSKVMNFDANKIRGGMIFPGLTQYSYYENIPCESCHHYVKCTQECASKHECVQQPMYNFKTKWLGEANDMHAPTHHEKDANSPNMEQWRRTRVCMQPAHTSQWTNIHACKKIFNMGMCDLCPGWHHIYVDHYAKVNIHKLVRIEWSWSWIGFNSRNMWADQYAIMCNWQLWTCQGEFEPDYAIWEAWWLTRSRQNDQDVPYLFSKCAFLWWMGTLALRDRACVWEFIGMDYICLFSEPTAARQSEVEQAGHICELAEFFHWEHTLLARRMPVYEAMGLIVYVTIHFTHNRAMKIDFIGCDCHHSSCYMGRGHVWKYNSNNPNAIGSDMHKWIHPQDVWHSEYNCRFAQFLIDPCNDAILPTGDPMGNMPAGTPCGYDTTNLRGKTWPLAVVYEKASIYAARHQMVDLGEWDYTDFSTAVFEVGLPAHNEIGESRKQTFTVQHLTRHEQVRNIPTVCYKSAPYMRPQWSTTDKYYPKKVEDDMGKFVWNKLKCAKIEWCLSNDLAGQTSPHMTGWMPCCFWDSRWQVWLNTKYWSHLQHCYRPSLSYYIDDSNDTVYQESDIVDENHRPNFPMGMRCVDCVFHYSFYFQYRQKIMDPHDGANPGVGYLPDVWCMECRSWTKALQMSHSRANVLFINFYHTVMGKQMSKDVCRQAPVHVIRYWKQNSTTDFADPETTQIGQWIQHTCCDLRAACSVCTARSCCTHFWENHWHLMRDDSRYGATEKLWIWWGNNCYFICFEYHFRTSNFQSTDSFPETMSPMKQYINLCKPEPPHCLVKYHSECSGAQETKYWVLCHSQSRQTDVNWDNINCKYYGMGCVDGWFVMSDDIEQHCTKYYEFEFVQSGDEECKAVVRMYQMTCTMMRINTV'
s2 = 'TSMFDQCIVWKVDKQDMMIEHMGDRAFEFASVHQCMREAFRTPHVVEEVYERIWIGMEDWHLRTWCECQGPTEPPQGDTMNQPHELLHAEGKYQMIPQYPLEMKVDVCQAQEKPGRYWSSRLTDEVYPVHSIMFENNTYFSFKYKMAKVTNFTNDCLCDHYGKVYCWRSTFCNNQMLWDWCVHRRYKTSLMKQLKLYCIQMPMTWLVLFHNSHWAAQAVWDPDSPFMMKYIHWCWYMEPWHTFWLTRFFCTNALAMRRSMKMRCKQGKKCLPDGYKFWEMTCESFQIVQFHMSTRQHLYDQGASYGLLHSGVAMQINAQWMFDWSLAKNDHFMFYAQYQHSKEIAQYMTVDTYHKVRRERGNGYCIRGHTPSPVRYCTMKVDRCDQQTPSVLKSYATLLKEVISAMLPGSLQSGSFSFVLCHQWIDPMKQVYIMMRYEMWTTMGDMKWVSHPFAFFKTDCPIWWSYCADRPQEGWYTDSHDPKEEPNWRMKNQSNQPGKLTYSAVLTRNIELYFMKGVMMVAVLRKDPMFRFLTWVHREIHYFNFGGFTQKPYMPVHELLAIMLLLLVTGDCWICQETAYSHVKELGYISCDIMHEICDNSMKAQGHNGIAHWKPEWQYPKPVKAQCNVIDGEEEDLDQHPTYYDILHSIYSNWIGLNTVCDVHNFRRVSTRQHTGCWFCVWWHHLPCNHHLVPHRKSEFHYLVMVTLGAHMVGYGTLEYMRVSPMVMAVWQEIPYCWSGDDGEQQTWHLWRKCSYAQDDKSVGYQLTFIIHTKPCIQFWEISETWIIQFREVCQWLDSHRDQLMLATPNPFSQSNVVHQIKANEVEDRIKGQTYTMPGGWFTCFTEAEEHHVLPPVSRNRMTMQLVPHQSSSKMGINWEWWINWHWFWIVRFGCKKSLHICMCMYHTNEDDTTNKQAHDALHLYQVCISMVNNPQAYFPDKWYMDADTCASDRRYNRSAVEIPPHNMDNELNARGFFFFKGHWATADQNARIKKTVEVSQRNLNDLWCVKWGACGFLLSYVHRQMRQVMVCPNWGSWHMRTIHECQTSVHQGWIEWYNKDPQMGVEEQMNQNVSICQPLMRHGIQQYGGDEWCAREAIQVRCDMIGALNVWFVLQTLNEGCTTGPDCYYMVRDFAAGFPAGRVQWAVQRFIRAATQVGISIQEASHRFLYAIGDKFFWRHANVVRFEKNTRIPTSCPVLICEFSRTCIMANCLTCSEWILMWSSHNDLFFFHFPEGLKAMMGRPPNNMSTTHGYMAHPSMCMYHAGHRPYENDTVDYQCRKPAYYDGHTKSVWVICIHMGTFAVCEIAVFGMVRCDYARMIWIKMEVYAMKDDQQKQLPDRGNVYEGVCKRLCQECHSARFMVRFEGVCLSITLYGPIIHWAVNLCEWSPGILIVYWWMWKRHFSYQWSYLSMSYAQRNGFKKTAIANFWFGVPGYNSVNNGHQLHMISKNEDFSEYGISDYASSTRWPIGEHWKSNQPNIVHSGCQYSWMAITASISCDVPIGLCLPDRWYGELRNIGAHFPKSCWHGFRRLPDRWMYKRHPSRTTNTTYYIEWGVRYNQWLRQDNYVRAVTHRDPKDEELHMQYEPEFEALERVVQETELYNGCFIWDFIQEVNKSHEPSNLMKLATWNDLVGYVSMRQMGRKDMTIMKTDSKVTEYGKACLFFGFHGLVQDPTFRAKETKYRVKLHNSWWNQEWYFPLQHFVSYLNCHVCQSNCFYRILNKPLYAGPYNNKIYAVHRRADVQCPNELFTRLGVYSYYENIKCESCHHHVKCTQECHECVQQPMYMHAPTHHEKDFSNINSPNMEQWRRTRRALHNCMQNYVQHAKKCAHSPWEWGATPETKKIFNMGMCDLCPGWHHIDDKGCEIDHWVLSHKRICEHLEIRQVQKAFSKFQTQMMHKFYPSNEWDGKELRRNQIHLMDWVCNFDWCMHIMYAQQLYRECQIQAQQLLCCMHHVHGDMCWCKVIVSNHMHSSEHILWLPMLTPPPIPTNWPGHQCIHPLERCDAAWAMHWAEKRGQRMFCMPNERELPFNSGESNWYATAATECHDFGLSYTSVIWKYLHQWYFLEQWIVQHIKQNPHGADSIVSRIMAPDMNMPRVTPIKQGHNNHPWKWGLLCHVMVHGFILEKIAPLKPKHNNVTDILSFKTWRNLHCMWFGPCEGSDILKSFTISFDSMCDENQGFIMSMTDFGLAPHEDNNSCCHHQASTNWTNQMPGVPFFVDCLYFLGNGMSPAHQIISTRMARGTFQESNSNRRWQDKVTKQSVCLKSIEYQCWRSGVLIPNGISQLDTARVIGHFHPKFRIFPCKGMEMGQFPHYDHEKTDGSLLFSCYCNCINVNTCLIKHEYCYRWKSTEVWPVQIGGWRASYAGVFDRCEYYWNSSCMESSQADMSCCMGTDQERSVMGQHMCCVWCVHEACMHAYESNYWYLLKFNLDMDCSKVCILIVHDTSSDSVQMFCRRHDDVQPAEGFTYKEDFIFSCDIRKGIGMDKGRANGAEEYENLYVPIFKCQIFTFEFEIPRVWRQVKSAFTGSYGVMPHPVRPGPWQYDCDADIEYLLRTMPMDNAWYKIRMGLPPNIGEANDKHGMFCALRANLMYGLGYETWIGSKVQIEWWTAEAMKQDYS'

score, aligned_s1, aligned_s2 = local_alignment(s1, s2, PAM250, 5)
print(score)
print(aligned_s1)
print(aligned_s2)
